# Security-hardened Dockerfile for security monitoring service
FROM python:3.11-alpine

# Create non-root user
RUN addgroup -g 1001 -S security && \
    adduser -u 1001 -S security -G security

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    curl \
    docker-cli \
    git \
    && rm -rf /var/cache/apk/*

# Copy requirements first for better caching
COPY requirements.txt /app/
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Install security tools
RUN pip install --no-cache-dir \
    trivy-python \
    bandit \
    safety \
    semgrep

# Copy application files
COPY --chown=security:security . /app/

# Set security-focused environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/app:$PATH" \
    SECURITY_SCAN_INTERVAL=3600 \
    LOG_LEVEL=INFO

# Create reports directory
RUN mkdir -p /app/reports && \
    chown -R security:security /app/reports

# Expose port
EXPOSE 8080

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Switch to non-root user
USER security

# Start security monitoring service
CMD ["python", "-m", "security.monitor"]
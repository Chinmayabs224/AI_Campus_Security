version: '3.8'

services:
  # HashiCorp Vault for secrets management
  vault:
    image: vault:1.15.2
    container_name: campus-security-vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "dev-only-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/data
      - vault-logs:/vault/logs
      - ./security/vault-config:/vault/config
    command: vault server -dev -dev-root-token-id="dev-only-token"
    networks:
      - security-network
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Trivy vulnerability scanner
  trivy:
    image: aquasec/trivy:latest
    container_name: campus-security-trivy
    restart: unless-stopped
    volumes:
      - trivy-cache:/root/.cache/trivy
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - security-network
    command: ["server", "--listen", "0.0.0.0:4954"]
    ports:
      - "4954:4954"

  # Grype vulnerability scanner (alternative)
  grype:
    image: anchore/grype:latest
    container_name: campus-security-grype
    restart: unless-stopped
    volumes:
      - grype-cache:/root/.cache/grype
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - security-network

  # Security monitoring and alerting
  security-monitor:
    build:
      context: .
      dockerfile: security/Dockerfile.security-monitor
    container_name: campus-security-monitor
    restart: unless-stopped
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=dev-only-token
      - TRIVY_SERVER=http://trivy:4954
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    volumes:
      - ./security/reports:/app/reports
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - security-network
      - app-network
    depends_on:
      - vault
      - trivy
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Falco for runtime security monitoring
  falco:
    image: falcosecurity/falco:latest
    container_name: campus-security-falco
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock:ro
      - /dev:/host/dev:ro
      - /proc:/host/proc:ro
      - /boot:/host/boot:ro
      - /lib/modules:/host/lib/modules:ro
      - /usr:/host/usr:ro
      - /etc:/host/etc:ro
      - ./security/falco-config:/etc/falco
    networks:
      - security-network
    command: ["falco", "--cri", "/host/var/run/docker.sock"]

volumes:
  vault-data:
    driver: local
  vault-logs:
    driver: local
  trivy-cache:
    driver: local
  grype-cache:
    driver: local

networks:
  security-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  app-network:
    external: true